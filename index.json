[{"categories":["Image_Slider"],"contents":"\rThis example demonstrates a 3D rotating cube using CSS animations and transformations. The cube rotates around the Y-axis, and each side of the cube displays a different image. HTML Code \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;cube\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmW239ythzhEUCVHTDxSzCVaB8wkA16E4hiF6MmNwgRSin?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmQHKeemS2YCLkdTBgQxyFbgwE2RHFr1F51AVhQFFcKCAy?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmS3Y6cMYsRAbXF9t5zmRWwqNttpX65Ev9DvykuHsBCFb6?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmSRo6VjDToFt3xUhNZV2qWBDDq4UPSEsbaq8Es2B5aP1i?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; CSS Code img { position: absolute; width: 240px; height: 240px; backface-visibility: hidden; } .container { width: 240px; height: 240px; perspective: 800px; } .container:before { content: \u0026#39;\u0026#39;; width: 100%; height: 100%; box-shadow: 0 0 75px 20px #0000001a, inset 0 0 350px 350px #0000001a; position: absolute; top: 90px; left: 0px; transform: rotateX(95deg) translateZ(-80px); animation: rotateShadow 16s infinite; } @keyframes rotateShadow { 0% { transform: rotateX(95deg) translateZ(-80px) rotateZ(360deg); } 25% { transform: rotateX(95deg) translateZ(-80px) rotateZ(270deg); } 50% { transform: rotateX(95deg) translateZ(-80px) rotateZ(180deg); } 75% { transform: rotateX(95deg) translateZ(-80px) rotateZ(90deg); } 100% { transform: rotateX(95deg) translateZ(-80px) rotateZ(0deg); } } .cube { height: 100%; width: 100%; position: relative; transform-style: preserve-3d; transform: all 0.8 ease-in-out; animation: rotate 16s infinite; } @keyframes rotate { 0% { transform: rotateY(0deg); } 25% { transform: rotateY(90deg); } 50% { transform: rotateY(180deg); } 75% { transform: rotateY(270deg); } 110% { transform: rotateY(3600deg); } } img:nth-child(1) { transform: rotateY(0deg) translateZ(120px); } img:nth-child(2) { transform: rotateY(90deg) translateZ(120px); } img:nth-child(3) { transform: rotateY(-90deg) translateZ(120px); } img:nth-child(4) { transform: rotateY(180deg) translateZ(120px); } CSS Code Explanation Global img Styling\nimg { position: absolute; width: 240px; height: 240px; backface-visibility: hidden; } This block sets the position, size, and backface visibility of all img elements. The backface-visibility property hides the back side of the images. Container Styling\n.container { width: 240px; height: 240px; perspective: 800px; } The .container class defines the dimensions and perspective for the 3D effect. The perspective property gives a 3D space view to the child elements. Container Shadow Effect\n.container:before { content: \u0026#39;\u0026#39;; width: 100%; height: 100%; box-shadow: 0 0 75px 20px #0000001a, inset 0 0 350px 350px #0000001a; position: absolute; top: 90px; left: 0px; transform: rotateX(95deg) translateZ(-80px); animation: rotateShadow 16s infinite; } Adds a shadow effect to the container using a pseudo-element. The shadow rotates with the animation defined in @keyframes rotateShadow. Rotate Shadow Animation\n@keyframes rotateShadow { 0% { transform: rotateX(95deg) translateZ(-80px) rotateZ(360deg); } 25% { transform: rotateX(95deg) translateZ(-80px) rotateZ(270deg); } 50% { transform: rotateX(95deg) translateZ(-80px) rotateZ(180deg); } 75% { transform: rotateX(95deg) translateZ(-80px) rotateZ(90deg); } 100% { transform: rotateX(95deg) translateZ(-80px) rotateZ(0deg); } } Defines the animation for rotating the shadow effect around the Z-axis. Cube Styling\n.cube { height: 100%; width: 100%; position: relative; transform-style: preserve-3d; transform: all 0.8s ease-in-out; animation: rotate 16s infinite; } Sets the 3D transformation for the .cube class. The preserve-3d property maintains the 3D position of the children elements. The rotate animation is applied to this element. Rotate Cube Animation\n@keyframes rotate { 0% { transform: rotateY(0deg); } 25% { transform: rotateY(90deg); } 50% { transform: rotateY(180deg); } 75% { transform: rotateY(270deg); } 100% { transform: rotateY(360deg); } } Defines the keyframes for the rotation animation of the cube around the Y-axis. Individual Image Positioning\nimg:nth-child(1) { transform: rotateY(0deg) translateZ(120px); } img:nth-child(2) { transform: rotateY(90deg) translateZ(120px); } img:nth-child(3) { transform: rotateY(-90deg) translateZ(120px); } img:nth-child(4) { transform: rotateY(180deg) translateZ(120px); } Positions each image at the sides of the cube using the nth-child selector. The images are placed at 90-degree intervals around the Y-axis, with each image translated 120px along the Z-axis to create the cube faces. HTML Structure \u0026lt;br\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;cube\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmW239ythzhEUCVHTDxSzCVaB8wkA16E4hiF6MmNwgRSin?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmQHKeemS2YCLkdTBgQxyFbgwE2RHFr1F51AVhQFFcKCAy?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmS3Y6cMYsRAbXF9t5zmRWwqNttpX65Ev9DvykuHsBCFb6?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;https://assets.lummi.ai/assets/QmSRo6VjDToFt3xUhNZV2qWBDDq4UPSEsbaq8Es2B5aP1i?auto=format\u0026amp;w=1500\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; The HTML creates a container div that holds the rotating cube. Inside the cube div, there are four images, each representing a side of the cube. The CSS handles the 3D rotation and positioning of these images to create a cube effect.\n","date":"2024-08-02T21:55:28-06:00","permalink":"https://vimsaldev.github.io/code_showcase/post/3d_image_slider/","section":"post","tags":null,"title":"3D Image Slider"},{"categories":["Gaming"],"contents":"TetsV3\n","date":"2024-08-01T07:53:44-06:00","permalink":"https://vimsaldev.github.io/code_showcase/post/test3/","section":"post","tags":null,"title":"Test3"},{"categories":["Development"],"contents":"Test2\n","date":"2024-08-01T00:19:18-06:00","permalink":"https://vimsaldev.github.io/code_showcase/post/dev/","section":"post","tags":null,"title":"Dev"},{"categories":["Development"],"contents":"Test\n","date":"2024-08-01T00:08:13-06:00","permalink":"https://vimsaldev.github.io/code_showcase/post/test/","section":"post","tags":null,"title":"Test"},{"categories":null,"contents":"This a test\n","date":"2024-08-01T00:07:54-06:00","permalink":"https://vimsaldev.github.io/code_showcase/about/","section":"","tags":null,"title":"About Me"}]